//设置变量
@bg-color: #b7d4a8;

//清除默认样式
* {
  margin: 0;
  padding: 0;
  // 改变盒子模型的计算方式
  box-sizing: border-box;
}

//统一设置字体
body {
  font: bold 20px "Courier";
}

//设置主窗口的样式
#main {
  width: 360px;
  height: 420px;
  //设置背景颜色
  background-color: @bg-color;
  //设置居中
  margin: 100px auto;
  //设置圆角
  border: 10px solid black;
  border-radius: 40px;

  //开启弹性盒模型(外层)
  display: flex;
  //设置主轴方向
  flex-flow: column; //纵向排列 -y
  //设置辅轴 -x的对齐方式
  align-items: center; //水平居中
  //设置主轴对齐方式
  justify-content: space-around; //元素间空白均匀分布

  //游戏舞台
  #stage {
    width: 304px;
    height: 304px;
    border: 2px solid black;
    //开启相对定位：蛇相对舞台(参照物)的位置
    position: relative;

    //设置蛇的样式
    #snake {
      & > div { //给snake内部的元素设置样式
        width: 10px;
        height: 10px;
        background-color: black;
        border: 1px solid @bg-color; //蛇每节的间隙
        //开启绝对定位
        position: absolute;
      }
    }

    //设置食物
    #food {
      width: 10px;
      height: 10px;
      position: absolute;
      left: 40px;
      top: 100px;
      display: flex;   //开启弹性盒
      flex-flow: row wrap;   //row设置主轴为横向排列；wrap当内部元素展示不下外部时，会换行
      //设置主轴和辅轴的空白空间分配到元素之间
      justify-content: space-between;  //4个角一边一个
      align-content: space-between;   //空白控件分配到4个中间
      //background-color: red;  //调试时看外/内元素关系时使用

      & >div{  //内部小div
        width: 4px;
        height: 4px;
        background-color: black;
        transform: rotate(45deg);  //旋转45度
      }
    }
  }

  //计分牌
  #score-panel {
    width: 300px;
    display: flex; //开启弹性盒后自动横向排列
    //主轴对齐方式
    justify-content: space-between; //空白区域分配到元素之间
  }
}

